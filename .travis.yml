dist: trusty
sudo: required

language: scala

git:
  depth: 3
  quiet: true

env:
  global:
    - JAVA_OPTS="-Dsbt.log.noformat=true"

  matrix:
    - PROJECT=finagle-mux
    - PROJECT=finagle-thriftmux

matrix:
  # Does not allow for assigning a build result if the non-'allow_failures' targets are complete
  # because of https://travis-ci.community/t/receiving-too-many-emails/4888
  fast_finish: false
  allow_failures:
    # Anything that tests against a Netty SNAPSHOT build should not be considered when failing
    # the overall build result. The env vars here must match EXACTLY to the env matrix properties.
    - env: PROJECT=finagle-base-http USE_NETTY_SNAPSHOT=true
    - env: PROJECT=finagle-core USE_NETTY_SNAPSHOT=true
    - env: PROJECT=finagle-http USE_NETTY_SNAPSHOT=true
    - env: PROJECT=finagle-http2 USE_NETTY_SNAPSHOT=true
    - env: PROJECT=finagle-integration USE_NETTY_SNAPSHOT=true
    - env: PROJECT=finagle-mux USE_NETTY_SNAPSHOT=true
    - env: PROJECT=finagle-mysql USE_NETTY_SNAPSHOT=true
    - env: PROJECT=finagle-netty4 USE_NETTY_SNAPSHOT=true
    - env: PROJECT=finagle-netty4-http USE_NETTY_SNAPSHOT=true
    - env: PROJECT=finagle-thriftmux USE_NETTY_SNAPSHOT=true

# These directories are cached to S3 at the end of the build
cache:
  directories:
   - $HOME/.ivy2/cache
   - $HOME/.ivy2/local/com.twitter
   - $HOME/.sbt
   - $HOME/.dodo

before_cache:
  # Cleanup the cached directories to avoid unnecessary cache updates
  - find $HOME/.ivy2/cache  -name "ivydata-*.properties" -delete
  - find $HOME/.sbt         -name "*.lock"               -delete

scala:
  - 2.11.12
  - 2.12.8

jdk:
  - openjdk8
  - openjdk11

notifications:
  slack:
    secure: PfUgPphNmKcZLIjTjd46IHBzqB0vkzK8clCqdsUr5taJRHhMSgRg8ks81sUhCmu+hTl3FG+jEzGgqMUvcisS+OziP/8QR/C41f5jdaETfkBE53DZIWVXZ80QRabphRTCbRUfibC39WWrhhLgWCIqzvTM8qsO/43JuQOGLQbuqcs=
    on_failure: change
    on_success: change

before_script:
  - unset SBT_OPTS # default $SBT_OPTS is irrelevant to sbt launcher
  # note: this is not ideal to run before every job in the matrix but is the only way that works consistently
  - curl -s https://raw.githubusercontent.com/twitter/dodo/develop/bin/build | bash -s -- --no-test --scala-version $TRAVIS_SCALA_VERSION finagle
  - travis_retry ./sbt --error ++$TRAVIS_SCALA_VERSION ci:update finagle-memcached/update
  # don't test these projects because they require a running memcached instance
  - ./sbt ++$TRAVIS_SCALA_VERSION finagle-memcached/test:compile

script:
  - if [[ ! -z "${USE_NETTY_SNAPSHOT}" ]]; then source ./netty-snapshot-env.sh $USE_NETTY_SNAPSHOT; fi
  - travis_retry ./sbt ++$TRAVIS_SCALA_VERSION coverage "$PROJECT/test" coverageReport

after_success:
  - ./sbt ++$TRAVIS_SCALA_VERSION coverageAggregate
  - bash <(curl -s https://codecov.io/bash)
